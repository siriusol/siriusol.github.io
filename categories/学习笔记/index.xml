<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>学习笔记 - Category - Ther 的博客</title>
    <link>https://blog.ther.cool/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</link>
    <description>学习笔记 - Category - Ther 的博客</description>
    <generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 07 Aug 2022 18:18:27 &#43;0800</lastBuildDate><atom:link href="https://blog.ther.cool/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/" rel="self" type="application/rss+xml" /><item>
  <title>《姜承尧的MySQL实战宝典》学习笔记</title>
  <link>https://blog.ther.cool/posts/%E5%A7%9C%E6%89%BF%E5%B0%A7%E7%9A%84mysql%E5%AE%9E%E6%88%98%E5%AE%9D%E5%85%B8%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</link>
  <pubDate>Sun, 07 Aug 2022 18:18:27 &#43;0800</pubDate>
  <author>Author</author>
  <guid>https://blog.ther.cool/posts/%E5%A7%9C%E6%89%BF%E5%B0%A7%E7%9A%84mysql%E5%AE%9E%E6%88%98%E5%AE%9D%E5%85%B8%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</guid>
  <description><![CDATA[1. 表结构设计篇-数字类型 整型类型 MySQL 数据库支持 SQL 标准支持的整型类型：INT、SMALLINT。此外，MySQL 数据库也支持诸如 TINYINT、MEDIUMINT 和 BIGINT 整型类型（表 1 显示了各种整型所占用的存储空间及取值范围）：
类型 占用空间（字节） 最小值~最大值 [signed] 最小值~最大值 [unsigned] TINYINT 1 [-128, 127] [0, 255] SMALLINT 2 [-32768, 32767] [0, 65535] MEDIUMINT 3 [-8388608, 8388607] [0, 16777215] INT 4 [-2147483648, 2147483647] [0, 4294967295] BIGINT 8 [-9223372036854775808, 9223372036854775807] [0, 18446744073709551615] 在整型类型中，有 signed 和 unsigned 属性，其表示的是整型的取值范围，默认为 signed。在设计时不建议刻意去用 unsigned 属性，因为在做一些数据分析时，SQL 可能返回的结果并不是想要得到的结果。
整型类型与自增设计 整型类型最常见的就是在业务中用来表示某件物品的数量。例如上述表的销售数量，或电商中的库存数量、购买次数等。另一个常见且重要的用法是作为表的主键，即用来唯一标识一行数据。
整型结合属性 auto_increment，可以实现自增功能，但在表结构设计时用自增做主键，要注意以下两点：
用 BIGINT 做主键，而不是 INT；
自增值并不持久化，可能会有回溯现象（MySQL 8.0 版本前）。]]></description>
</item></channel>
</rss>
